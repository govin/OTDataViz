@{
	ViewBag.Title = "OpenTable Live Reservation Map";
}



@section scripts{
	<script type="text/javascript"
		src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBbZCTMWJsQWIIrJreyd2ly2AzsOusVtfs&sensor=false">
	</script>

	<script type="text/javascript">
		var map;
		var lat = 38.7;
		var lon = -9.18;
		var zoom = 3;

		function loadNAReservations() {
			DSProxy.DoAjax("api/LiveResoFeedNA", "GET", null, loadNAReservationsSuccess, null, null, true);
		};

		function computeResosPerMin(nResos, nMiliiSeconds) {
			var noofMinutes = nMiliiSeconds / (1000 * 60);
			if (noofMinutes > 0) {
				var nOfResosPerMinute = nResos / noofMinutes;
				return Math.ceil(nOfResosPerMinute);
			} else {
				return 0;
			}

		}

		function loadNAReservationsSuccess(data) {
			var update = 0;
			var reservations = data;
			if (reservations.length > 0) {
				var firstDateMade = new Date(reservations[0].DateMadeUtc + "Z");
				var lastDateMade = new Date(reservations[reservations.length - 1].DateMadeUtc + "Z");
				update = firstDateMade.getTime() - lastDateMade.getTime();
				animate(reservations);
				$("#resosPerMinuteNa").text(computeResosPerMin(reservations.length, update));
			}
			if (update < 60000)
				update = 60000;

			window.setTimeout(function () {
				loadNAReservations();
			}, update - 500);
		}

		function loadNAReservationsError(data) {
			window.setTimeout(function () {
				loadNAReservations();
			}, 120000);
		}


		function loadJPReservations() {
			DSProxy.DoAjax("api/LiveResoFeedJP", "GET", null, loadJPReservationsSuccess, null, null, true);
		};

		function loadJPReservationsSuccess(data) {
			var update = 0;
			var reservations = data;
			if (reservations.length > 0) {
				var firstDateMade = new Date(reservations[0].DateMadeUtc + "Z");
				var lastDateMade = new Date(reservations[reservations.length - 1].DateMadeUtc + "Z");
				update = firstDateMade.getTime() - lastDateMade.getTime();
				animate(reservations);
				$("#resosPerMinuteAsia").html(computeResosPerMin(reservations.length, update));
			}
			if (update < 60000)
				update = 60000;

			window.setTimeout(function () {
				loadJPReservations();
			}, update - 500);
		}

		function loadJPReservationsError(data) {
			window.setTimeout(function () {
				loadJPReservations();
			}, 120000);
		}

		function loadEUReservations() {
			DSProxy.DoAjax("api/LiveResoFeedEU", "GET", null, loadEUReservationsSuccess, null, null, true);
		};

		function loadEUReservationsSuccess(data) {
			var update = 0;
			var reservations = data;
			if (reservations.length > 0) {
				var firstDateMade = new Date(reservations[0].DateMadeUtc + "Z");
				var lastDateMade = new Date(reservations[reservations.length - 1].DateMadeUtc + "Z");
				update = firstDateMade.getTime() - lastDateMade.getTime();
				animate(reservations);
				$("#resosPerMinuteEu").html(computeResosPerMin(reservations.length, update));
			}
			if (update < 60000)
				update = 60000;

			window.setTimeout(function () {
				loadEUReservations();
			}, update - 500);
		}

		function loadEUReservationsError(data) {
			window.setTimeout(function () {
				loadEUReservations();
			}, 120000);
		}

		function initializeMap() {

			setMapCoordinates();

			var mapOptions = {
				center: new google.maps.LatLng(lat, lon),
				zoom: zoom,
				mapTypeId: google.maps.MapTypeId.TERRAIN,
				streetViewControl: false,
				mapTypeControl: false,
				zoomControl: true,
				zoomControlOptions: {
					position: google.maps.ControlPosition.LEFT_BOTTOM
				},
				panControl: true,
				panControlOptions: {
					position: google.maps.ControlPosition.LEFT_BOTTOM
				},
				scaleControl: false
			};
			map = new google.maps.Map(document.getElementById("map-canvas"),
				mapOptions);
		}

		function setMapCoordinates() {
			if (!setCoordinatesFromURL()) {
				setCoordinatesFromRegion();
			}
		}

		function setCoordinatesFromURL() {
			var retVal = false;
			var loc = window.location.href;
			switch (loc.toLowerCase().substr(loc.length - 2)) {
				case "na":
					lat = 48.17;
					lon = -100.17;
					zoom = 4;
					retVal = true;
					break;
				case "eu":
					lat = 53.81;
					lon = 4.43;
					zoom = 6;
					retVal = true;
					break;
				case "jp":
					lat = 39.41;
					lon = 136;
					zoom = 6;
					retVal = true;
					break;
				default:
					retVal = false;
			}
			return retVal;
		}

		function setCoordinatesFromRegion() {
			var userLang = (navigator.language) ? navigator.language : navigator.userLanguage;
			var width = $("body").width();

			if (width < 1825) {
				switch (userLang.toLowerCase()) {
					case "en-gb":
					case "de-de":
						lat = 53.81;
						lon = 4.43;
						zoom = 6;
						break;
					case "ja-jp":
						lat = 39.41;
						lon = 136;
						zoom = 6;
						break;
					default:
						lat = 48.17;
						lon = -100.17;
						zoom = 4;
						break;
				}
			}
		}

		function animate(reservations) {
			var firstDateMade;
			var times = [];
			if (reservations.length > 0)
				firstDateMade = new Date(reservations[0].DateMadeUtc + "Z");
			for (var index = 0, length = reservations.length; index < length; index++) {
				var dateMade = new Date(reservations[index].DateMadeUtc + "Z");
				var timeElapsedMs = firstDateMade.getTime() - dateMade.getTime();
				times.push(timeElapsedMs);
			}

			for (var i = 0, l = reservations.length; i < l; i++) {
				doSetTimeout(reservations[i], times[i]);
			}
		}

		function doSetTimeout(reso, time) {
			setTimeout(function () { placeMarker(reso); }, time);
		}

		function placeMarker(reso) {
			var myLatlng = new google.maps.LatLng(reso.Latitude, reso.Longitude);
			var image = {
				url: '../Content/img/red_restaurant.png',
				size: new google.maps.Size(32, 37),
				origin: new google.maps.Point(0, 0),
				anchor: new google.maps.Point(16, 37)
			};

			if (reso.Partysize > 3 && reso.Partysize < 7)
				image.url = '../Content/img/yellow_restaurant.png';
			else if (reso.Partysize > 8)
				image.url = '../Content/img/blue_restaurant.png';

			var marker = new google.maps.Marker({
				position: myLatlng,
				map: map,
				icon: image,
				animation: google.maps.Animation.DROP,
				title: reso.RestaurantName + " - " + reso.Partysize
			});

			window.setTimeout(function () { marker.setMap(null); }, 3000);
		}

		$(document).ready(function () {
			initializeMap();
			window.setTimeout(function () {
				loadNAReservations();
			}, 0);
			window.setTimeout(function () {
				loadEUReservations();
			}, 1000);
			window.setTimeout(function () {
				loadJPReservations();
			}, 1500);
		});

	</script>
}

<div id="header">

	<div class="logo">
		<div id="headerMessageBox">
			<span class="headerMessage">Reservations By The Minute</span>
		</div>
		<div id="partyBox">
			<div class="inner">
				<span id="partySize">Party Size:</span>
			</div>
			<div id="red" class="inner">
				<span class="innerLabel">1-3</span>
			</div>
			<div id="yellow" class="inner">
				<span class="innerLabel">4-6</span>
			</div>
			<div id="blue" class="inner">
				<span class="innerLabel">7+</span>
			</div>
		</div>
		<div id="resosPerMin">
			<span class="resosPerMin">North America: <span id="resosPerMinuteNa">0</span> reservations/minute</span>
			<span class="resosPerMin">Europe: <span id="resosPerMinuteEu">0</span> reservations/minute</span>
			<span class="resosPerMin">Japan: <span id="resosPerMinuteAsia">0</span> reservations/minute</span>
		</div>
	</div>
	<div>
		<span class="delayMessage">*delayed up to 5 minutes</span>
	</div>
</div>
<div id="map-canvas" />


@section styles{
	<style type="text/css">
		span
		{
			font-family: Arial, Helvetica, sans-serif;
		}

		.innerLabel
		{
			padding-top: 38px;
			display: block;
			text-align: center;
			padding-right: 3px;
		}

		#partySize
		{
			padding-top: 15px;
			display: block;
			padding-right: 24px;
		}

		#blue
		{
			width: 44px;
			height: 50px;
			background-image: url(../../Content/img/blue_restaurant.png);
			background-position: top center;
			opacity: 1;
			background-repeat: no-repeat;
		}

		#red
		{
			width: 44px;
			height: 50px;
			background-image: url(../../Content/img/red_restaurant.png);
			background-position: top center;
			opacity: 1;
			background-repeat: no-repeat;
		}

		#yellow
		{
			width: 44px;
			height: 50px;
			background-image: url(../../Content/img/yellow_restaurant.png);
			background-position: top center;
			opacity: 1;
			background-repeat: no-repeat;
		}

		.inner
		{
			float: left;
			height: 100%;
		}

		#partyBox
		{
			float: right;
			padding-right: 35px;
			padding-top: 20px;
		}


		#headerMessageBox
		{
			width: 750px;
			height: 100%;
			float: left;
		}

		html
		{
			height: 100%;
		}

		body
		{
			height: 100%;
			margin: 0;
			padding: 0;
		}

		#map-canvas
		{
			height: 100%;
			position: relative;
		}

		#header
		{
			height: 100px;
			min-height: 75px;
			position: absolute;
			z-index: 1;
			background-color: white;
			width: 100%;
			opacity: .8;
			border-bottom: solid 1px red;
		}

		.headerMessage
		{
			display: block;
			text-align: left;
			font-size: 2em;
			padding-top: 30px;
			padding-left: 249px;
			float: left;
		}

		.logo
		{
			height: 85px;
			width: 100%;
			background-image: url(../../Content/img/Logo.png);
			background-position: left;
			background-repeat: no-repeat;
			opacity: 1;
		}

		.delayMessage
		{
			display: block;
			width: 100%;
			opacity: 1;
			text-align: right;
			font-size: .7em;
		}

		.resosPerMin
		{
			display: block;
		}

		#resosPerMin {
			padding-top: 20px;
		}

		#resosPerMinuteNa, #resosPerMinuteEu, #resosPerMinuteAsia {
			color: #900000;
		}
	</style>
}